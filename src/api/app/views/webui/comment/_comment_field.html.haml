= form_for(comment, method: form_method, remote: true, html: { id: "#{element_suffix}_form",
class: "#{form_method}-comment-form write-and-preview" },
data: { preview_message_url: preview_comments_path, message_body_param: 'comment[body]', turbo_frame: "_top" }) do |f|
  = hidden_field_tag :commentable_type, commentable.class.name, { id: "#{element_suffix}_commentable_type" }
  = hidden_field_tag :commentable_id, commentable.id, { id: "#{element_suffix}_commentable_id" }
  - if defined?(file_index)
    = f.hidden_field :diff_file_index, value: file_index, id: "#{element_suffix}_diff_file_index"
    = f.hidden_field :diff_line_number, value: line_number, id: "#{element_suffix}_diff_line_number"
  - if defined?(source_rev) && defined?(target_rev)
    = f.hidden_field :source_rev, value: source_rev, id: "#{element_suffix}_source_rev"
    = f.hidden_field :target_rev, value: target_rev, id: "#{element_suffix}_target_rev"
  = f.hidden_field :parent_id, value: comment.parent_id, id: "#{element_suffix}_parent_id"
  .card
    %ul.card-header.nav.nav-tabs.px-3.pt-2.pb-0.disable-link-generation{ role: 'tablist' }
      %li.nav-item
        = link_to('Write', "#write_#{element_suffix}", class: 'nav-link active', data: { 'bs-toggle': 'tab' }, role: 'tab',
        aria: { controls: 'write-comment-tab', selected: 'true' })
      %li.nav-item
        = link_to('Preview', "#preview_#{element_suffix}", class: 'nav-link preview-message-tab', data: { 'bs-toggle': 'tab' },
        role: 'tab', aria: { controls: 'preview-message-tab', selected: 'false' })
    .tab-content.px-3
      .tab-pane.fade.show.active.my-3{ id: "write_#{element_suffix}", role: 'tabpanel', 'aria-labelledby': 'write-comment-tab',
                                       'data-canned-controller': '' }
        - if Flipper.enabled?(:canned_responses, User.session)
          .d-flex.justify-content-end
            = render CannedResponsesDropdownComponent.new(User.session.canned_responses.where(decision_type: nil).order(:title))
        ~ f.text_area :body, id: "#{element_suffix}_body", rows: '4',
        placeholder: 'Write your comment here... (Markdown markup is supported)', required: true,
        class: 'w-100 form-control comment-field message-field'
      .tab-pane.fade{ id: "preview_#{element_suffix}", role: 'tabpanel', 'aria-labelledby': 'preview-message-tab' }
        .comment-preview.message-preview.my-3
      .comment-controls.mb-3
        - case form_method
        - when :post
          = f.submit 'Add comment', class: 'btn btn-primary me-2', data: { disable_with: 'Creating comment...' }, disabled: true
        - when :put
          = f.submit 'Update comment', class: 'btn btn-primary me-2', data: { disable_with: 'Updating comment...' }
        - if has_cancel
          %a.cancel-comment.btn.btn-outline-secondary
            Cancel

:javascript
  attachPreviewMessageOnCommentBoxes();
