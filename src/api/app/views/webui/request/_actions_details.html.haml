:ruby
  submit_actions = bs_request.bs_request_actions.where(type: [:add_role, :submit])
  submit_actions_count = submit_actions.count

- if submit_actions_count > 1
  .d-flex.flex-wrap.align-items-center
    .input-group.w-auto
      = link_to('Previous', request_show_path(number: bs_request.number, request_action_id: prev_action&.id,
                                              full_diff: diff_limit, diff_to_superseded: diff_to_superseded_id),
                class: "btn btn-primary btn-sm #{prev_action ? '' : 'disabled'}")
      .dropdown#request-actions
        %button.btn.btn-outline-primary.btn-sm.dropdown-toggle.rounded-0{ 'aria-expanded' => 'false', 'data-bs-toggle' => 'dropdown',
                                                                          :type => 'button', 'data-boundary' => 'viewport' }
          Select Action
        %ul.dropdown-menu.dropdown-menu-start.scrollable-dropdown.pt-0
          %li.card-header.px-1.sticky-top
            %h6.dropdown-header
              - if User.session
                %span Seen
              %span Action
              %span.float-end Revision
          - submit_actions.each_with_index do |action_item, action_index|
            %li.border-top
              = link_to((render partial: 'action_text', locals: { action: action_item, action_index: action_index }),
                                                        request_show_path(number: bs_request.number,
                                                                          request_action_id: action_item.id,
                                                                          full_diff: diff_limit,
                                                                          diff_to_superseded: diff_to_superseded_id),
                                                        class: "dropdown-item #{action_item.id == active_action.id ? 'active' : ''}",
                                                        'aria-current': 'true')
      = link_to('Next', request_show_path(number: bs_request.number, request_action_id: next_action&.id,
                                          full_diff: diff_limit, diff_to_superseded: diff_to_superseded_id),
                class: "btn btn-primary btn-sm #{next_action ? '' : 'disabled'}")

    - active_action_index = submit_actions.find_index(active_action) + 1
    %span.ms-2 Showing ##{active_action_index} (of #{submit_actions_count})

%h5.mt-4
  Action details
  - if submit_actions_count > 1 && User.session
    %span#action-seen-by-user-wrapper
      = render ActionSeenByUserComponent.new(action: active_action, user: User.session!)

.fst-italic= request_action_header(action, bs_request.creator)

- content_for :ready_function do
  :plain
    var hashRegexp = new RegExp(`\#${HASH_PREFIX}.+`);

    $('#request-actions').on('shown.bs.dropdown', function () {
      // Scrolls towards the current request action
      var currentAction = $('a.dropdown-item.active');
      currentAction[0].scrollIntoView({behavior: "smooth", block: "center"});

      // Adapts Href according to seleted tab
      $.each($('#request-actions .dropdown-item'), function () {
        var href = $(this).attr('href');
        if (document.location.hash.search('#diff_') != -1 && href.search('#') == -1) {
          href = href + '#' + HASH_PREFIX + 'changes';
        }
        else if (href.search('#') == -1) {
          href = href + document.location.hash;
        }
        else if (document.location.hash.search('#diff_') == -1) {
          href = href.replace(hashRegexp, document.location.hash);
        }
        $(this).attr('href', href);
      });
    });
